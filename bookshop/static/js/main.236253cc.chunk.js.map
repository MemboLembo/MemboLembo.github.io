{"version":3,"sources":["components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","components/book-list/book-list.js","actions/index.js","components/book-list/index.js","utils/compose.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/index.js","store.js","index.js"],"names":["BookListItem","book","title","author","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","BookList","data","this","getBooks","booksLoaded","books","map","key","id","Component","mapDispatchToProps","newBooks","type","payload","funcs","comp","reduceRight","wrapped","f","compose","connect","HomePage","CartPage","App","path","component","exact","ErrorIndicator","ErrorBoundry","state","hasError","setState","children","BookstoreService","initialState","reducer","action","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"8TAEeA,G,MCCM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OACf,OACE,kBAAC,WAAD,KACE,8BAAOD,GACP,8BAAOC,M,ECHTC,IAAMC,gBAFEC,E,EAAVC,SACUC,E,EAAVC,SCcaC,EAfc,kBAAM,SAACC,GAClC,OAAO,SAACC,GACN,OACE,kBAACJ,EAAD,MAEI,SAACK,GACC,OAAQ,kBAACF,EAAD,iBAAaC,EAAb,CACCC,iBAAkBA,WCAjCC,G,wLACgB,IAGZC,EADuBC,KAAKJ,MAA1BC,iBACsBI,WAG9BD,KAAKJ,MAAMM,YAAYH,K,+BAGf,IACAI,EAAUH,KAAKJ,MAAfO,MACR,OACE,4BACGA,EAAMC,KAAI,SAACnB,GACV,OACE,wBAAIoB,IAAKpB,EAAKqB,IACZ,kBAAC,EAAD,CAAcrB,KAAMA,a,GAjBXsB,cA8BjBC,EAAqB,CACzBN,YCzCkB,SAACO,GACnB,MAAO,CACLC,KAAM,eACNC,QAASF,KCDEX,ECFC,sCAAIc,EAAJ,yBAAIA,EAAJ,uBAAc,SAACC,GAC7B,OAAOD,EAAME,aACX,SAACC,EAASC,GAAV,OAAgBA,EAAED,KAAUF,IH0CjBI,CACbvB,IACAwB,aAVsB,SAAC,GACvB,MAAO,CAAEf,MAD4B,EAAZA,SAUAK,GAFZS,CAGbnB,GItCaqB,EANE,WACf,OACE,kBAAC,EAAD,OCCWC,EAJE,WACf,OAAO,2CCDMC,G,MCIH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWJ,EAAUK,OAAK,IAE1C,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWH,OCTtBK,G,MCCQ,WACrB,OAAO,yCCFMC,E,4MCEbC,MAAQ,CACNC,UAAU,G,kEAIV5B,KAAK6B,SAAS,CAAED,UAAU,M,+BAI1B,OAAI5B,KAAK2B,MAAMC,SACN,kBAAC,EAAD,MAGF5B,KAAKJ,MAAMkC,a,GAdoBvB,aCFrBwB,E,mGAEjB,MAAO,CACL,CACEzB,GAAI,EACJpB,MAAO,iCACPC,OAAQ,mBAEV,CACEmB,GAAI,EACJpB,MAAO,cACPC,OAAQ,0B,aCZV6C,EAAe,CACnB7B,MAAO,IAeM8B,EAZC,WAAmC,IAAlCN,EAAiC,uDAAzBK,EAAcE,EAAW,uCAChD,OAAQA,EAAOxB,MACb,IAAK,eACH,MAAO,CACLP,MAAO+B,EAAOvB,SAGlB,QACE,OAAOgB,ICNEQ,EAFDC,YAAYH,GCQpBpC,EAAmB,IAAIkC,EAE7BM,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,KACE,kBAAC7C,EAAD,CAA0BiD,MAAO1C,GAC/B,kBAAC,IAAD,KACE,kBAAC,EAAD,UAKR2C,SAASC,eAAe,W","file":"static/js/main.236253cc.chunk.js","sourcesContent":["import BookListItem from './book-list-item';\n\nexport default BookListItem;\n","import React, { Fragment } from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book }) => {\n  const { title, author } = book;\n  return (\n    <Fragment>\n      <span>{title}</span>\n      <span>{author}</span>\n    </Fragment>\n  );\n};\n\nexport default BookListItem;\n","import React from 'react';\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer,\n} = React.createContext();\n\nexport {\n  BookstoreServiceProvider,\n  BookstoreServiceConsumer,\n};\n","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\nconst withBookstoreService = () => (Wrapped) => {\n  return (props) => {\n    return (\n      <BookstoreServiceConsumer>\n        {\n          (bookstoreService) => {\n            return (<Wrapped {...props}\n                     bookstoreService={bookstoreService}/>);\n          }\n        }\n      </BookstoreServiceConsumer>\n    );\n  };\n};\n\nexport default withBookstoreService;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BookListItem from '../book-list-item';\n\nimport { withBookstoreService } from '../hoc';\nimport { booksLoaded } from '../../actions';\nimport { compose } from '../../utils';\n\nimport './book-list.css';\n\nclass BookList extends Component {\n  componentDidMount() {\n    // 1. receive data\n    const { bookstoreService } = this.props;\n    const data = bookstoreService.getBooks();\n\n    // 2. dispacth action to store\n    this.props.booksLoaded(data);\n  }\n\n  render() {\n    const { books } = this.props;\n    return (\n      <ul>\n        {books.map((book) => {\n          return (\n            <li key={book.id}>\n              <BookListItem book={book} />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = ({ books }) => {\n  return { books };\n};\n\nconst mapDispatchToProps = {\n  booksLoaded,\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(BookList);\n","const booksLoaded = (newBooks) => {\n  return {\n    type: 'BOOKS_LOADED',\n    payload: newBooks,\n  };\n};\n\nexport { booksLoaded };\n","import BookList from './book-list';\n\nexport default BookList;\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp,\n  );\n};\n\nexport { compose };\n","import React from 'react';\nimport BookList from '../book-list';\n\nconst HomePage = () => {\n  return (\n    <BookList />\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst CartPage = () => {\n  return <div>Cart Page</div>;\n};\n\nexport default CartPage;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { HomePage, CartPage } from '../pages';\n\nimport './app.css';\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={HomePage} exact />\n\n      <Route path=\"/cart\" component={CartPage} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return <div>Error!</div>;\n};\n\nexport default ErrorIndicator;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n","/* eslint-disable class-methods-use-this */\nexport default class BookstoreService {\n  getBooks() {\n    return [\n      {\n        id: 1,\n        title: 'Production-Ready Microservices',\n        author: 'Susan J. Fowler',\n      },\n      {\n        id: 2,\n        title: 'Release It!',\n        author: 'Michael T. Nygard',\n      },\n    ];\n  }\n}\n","const initialState = {\n  books: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'BOOKS_LOADED':\n      return {\n        books: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}