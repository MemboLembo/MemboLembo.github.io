{"version":3,"sources":["components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","utils/compose.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/home-page.js","components/pages/cart-page.js","components/shop-header/shop-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["BookListItem","book","onAddedToCart","title","author","price","coverImage","className","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","Spinner","ErrorIndicator","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","funcs","comp","reduceRight","wrapped","f","compose","connect","bookList","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","total","orderTotal","item","idx","count","HomePage","CartPage","ShopHeader","numItems","to","href","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.a1d9c4d9.chunk.js","sourcesContent":["import BookListItem from './book-list-item';\n\nexport default BookListItem;\n","import React from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book, onAddedToCart }) => {\n  const {\n    title,\n    author,\n    price,\n    coverImage,\n  } = book;\n  return (\n    <div className=\"book-list-item\">\n      <div className=\"book-cover\">\n        <img src={coverImage} alt=\"cover\" />\n      </div>\n      <div className=\"book-details\">\n        <span className=\"book-title\">{title}</span>\n        <div className=\"book-author\">{author}</div>\n        <div className=\"book-price\">${price}</div>\n        <button\n          onClick={onAddedToCart}\n          className=\"btn btn-info add-to-cart\">\n          Add to cart\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookListItem;\n","import React from 'react';\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer,\n} = React.createContext();\n\nexport {\n  BookstoreServiceProvider,\n  BookstoreServiceConsumer,\n};\n","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\nconst withBookstoreService = () => (Wrapped) => {\n  return (props) => {\n    return (\n      <BookstoreServiceConsumer>\n        {\n          (bookstoreService) => {\n            return (<Wrapped {...props}\n                     bookstoreService={bookstoreService}/>);\n          }\n        }\n      </BookstoreServiceConsumer>\n    );\n  };\n};\n\nexport default withBookstoreService;\n","const booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST',\n  };\n};\n\nconst booksLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks,\n  };\n};\n\nconst booksError = (error) => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error,\n  };\n};\n\nconst bookAddedToCart = (bookId) => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId,\n  };\n};\n\nconst bookRemovedFromCart = (bookId) => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId,\n  };\n};\n\nconst allBooksRemovedFromCart = (bookId) => {\n  return {\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\n    payload: bookId,\n  };\n};\n\n\nconst fetchBooks = (bookstoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks()\n    .then((data) => dispatch(booksLoaded(data)))\n    .catch((err) => dispatch(booksError(err)));\n};\n\nexport {\n  fetchBooks,\n  bookAddedToCart,\n  bookRemovedFromCart,\n  allBooksRemovedFromCart,\n};\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return <div>loading...</div>;\n};\n\nexport default Spinner;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return <div>Error!</div>;\n};\n\nexport default ErrorIndicator;\n","/* eslint-disable no-shadow */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BookListItem from '../book-list-item';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport { compose } from '../../utils';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport './book-list.css';\n\nconst BookList = ({ books, onAddedToCart }) => {\n  return (\n    <ul className=\"book-list\">\n      {books.map((book) => {\n        return (\n          <li key={book.id}>\n            <BookListItem\n              book={book}\n              onAddedToCart={() => onAddedToCart(book.id)}/>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const {\n      books, loading, error, onAddedToCart,\n    } = this.props;\n\n    if (loading) {\n      return <Spinner/>;\n    }\n\n    if (error) {\n      return <ErrorIndicator/>;\n    }\n\n    return <BookList\n      books={books}\n      onAddedToCart={onAddedToCart}/>;\n  }\n}\n\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => {\n  return { books, loading, error };\n};\n\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\n    onAddedToCart: (id) => dispatch(bookAddedToCart(id)),\n  };\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(BookListContainer);\n","import BookList from './book-list';\n\nexport default BookList;\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp,\n  );\n};\n\nexport { compose };\n","/* eslint-disable object-curly-newline */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  bookAddedToCart,\n  bookRemovedFromCart,\n  allBooksRemovedFromCart,\n} from '../../actions';\n\nimport './shopping-cart-table.css';\n\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n  const renderRow = (item, idx) => {\n    const { id, title, count, price } = item;\n    return (\n      <tr key={id}>\n        <td>{idx + 1}</td>\n        <td>{title}</td>\n        <td>{count}</td>\n        <td>${price}</td>\n        <td>\n          <button\n            onClick={() => onDelete(id)}\n            className=\"btn btn-outline-danger btn-sm float-right\">\n            <i className=\"fa fa-trash-o\" />\n          </button>\n          <button\n            onClick={() => onIncrease(id)}\n            className=\"btn btn-outline-success btn-sm float-right\">\n            <i className=\"fa fa-plus-circle\" />\n          </button>\n          <button\n            onClick={() => onDecrease(id)}\n            className=\"btn btn-outline-warning btn-sm float-right\">\n            <i className=\"fa fa-minus-circle\" />\n          </button>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { items.map(renderRow) }\n        </tbody>\n      </table>\n\n      <div className=\"total\">\n        Total: ${total}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\n  return {\n    items: cartItems,\n    total: orderTotal,\n  };\n};\n\nconst mapDispatchToProps = {\n  onIncrease: bookAddedToCart,\n  onDecrease: bookRemovedFromCart,\n  onDelete: allBooksRemovedFromCart,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;\n","import React from 'react';\nimport BookList from '../book-list';\nimport ShoppingCartTable from '../shopping-cart-table';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <BookList />\n      <ShoppingCartTable />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst CartPage = () => {\n  return <div>Cart Page</div>;\n};\n\nexport default CartPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './shop-header.css';\n\nconst ShopHeader = ({ numItems, total }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link to=\"/\">\n        <div className=\"logo text-dark\">Bookshop</div>\n      </Link>\n      <Link to=\"/cart\">\n        <div className=\"shopping-cart\" href=\"#\">\n          <i className=\"cart-icon fa fa-shopping-cart\" />\n          {numItems} items (${total})\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nexport {\n  ShopHeader,\n};\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { HomePage, CartPage } from '../pages';\nimport { ShopHeader } from '../shop-header';\n\nimport './app.css';\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"container\">\n      <ShopHeader numItems={5} total={210}/>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n\n        <Route path=\"/cart\" component={CartPage} />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n","/* eslint-disable class-methods-use-this */\nexport default class BookstoreService {\n  data = [\n    {\n      id: 1,\n      title: 'Production-Ready Microservices',\n      author: 'Susan J. Fowler',\n      price: 32,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Release It!',\n      author: 'Michael T. Nygard',\n      price: 45,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg',\n    },\n  ];\n\n  getBooks() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() > 0.75) {\n          reject(new Error('Something bad happened'));\n        } else {\n          resolve(this.data);\n        }\n      }, 700);\n    });\n  }\n}\n","const updateBookList = (state, action) => {\n  if (state === undefined) {\n    return {\n      books: [],\n      loading: true,\n      error: null,\n    };\n  }\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        books: [],\n        loading: true,\n        error: null,\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        books: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        books: [],\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state.bookList;\n  }\n};\n\nexport default updateBookList;\n","/* eslint-disable no-case-declarations */\nconst updateCartItems = (cartItems, item, idx) => {\n  if (item.count === 0) {\n    return [\n      ...cartItems.slice(0, idx),\n      ...cartItems.slice(idx + 1),\n    ];\n  }\n\n  if (idx === -1) {\n    return [\n      ...cartItems,\n      item,\n    ];\n  }\n\n  return [\n    ...cartItems.slice(0, idx),\n    item,\n    ...cartItems.slice(idx + 1),\n  ];\n};\n\nconst updateCartItem = (book, item = {}, quantity) => {\n  const {\n    id = book.id,\n    count = 0,\n    title = book.title,\n    price = 0,\n  } = item;\n\n  return {\n    id,\n    title,\n    count: count + quantity,\n    price: price + quantity * book.price,\n  };\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n  const { bookList: { books }, shoppingCart: { cartItems } } = state;\n\n  const book = books.find(({ id }) => id === bookId);\n  const itemIndex = cartItems.findIndex(({ id }) => id === bookId);\n  const item = cartItems[itemIndex];\n\n  const newItem = updateCartItem(book, item, quantity);\n  return {\n    orderTotal: 0,\n    cartItems: updateCartItems(cartItems, newItem, itemIndex),\n  };\n};\n\nconst updateShoppingCart = (state, action) => {\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 0,\n    };\n  }\n\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n\n    default:\n      return state.shoppingCart;\n  }\n};\n\nexport default updateShoppingCart;\n","import updateBookList from './book-list';\nimport updateShoppingCart from './shopping-cart';\n\nconst reducer = (state, action) => {\n  return {\n    bookList: updateBookList(state, action),\n    shoppingCart: updateShoppingCart(state, action),\n  };\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}