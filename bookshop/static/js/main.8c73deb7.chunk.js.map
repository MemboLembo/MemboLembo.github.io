{"version":3,"sources":["components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","utils/compose.js","components/shopping-cart-table/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/pages/cart-page.js","components/shop-header/shop-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/index.js","store.js","index.js"],"names":["BookListItem","book","title","author","price","coverImage","className","src","alt","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","fetchBooks","dispatch","type","getBooks","then","data","payload","catch","err","Spinner","ErrorIndicator","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","funcs","comp","reduceRight","wrapped","f","compose","connect","ShoppingCartTable","items","cartItems","total","orderTotal","onIncrease","console","log","onDecrease","onDelete","item","idx","name","count","onClick","HomePage","CartPage","ShopHeader","numItems","to","href","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","initialState","reducer","action","store","createStore","ReactDOM","render","value","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.8c73deb7.chunk.js","sourcesContent":["import BookListItem from './book-list-item';\n\nexport default BookListItem;\n","import React from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book }) => {\n  const {\n    title,\n    author,\n    price,\n    coverImage,\n  } = book;\n  return (\n    <div className=\"book-list-item\">\n      <div className=\"book-cover\">\n        <img src={coverImage} alt=\"cover\" />\n      </div>\n      <div className=\"book-details\">\n        <span className=\"book-title\">{title}</span>\n        <div className=\"book-author\">{author}</div>\n        <div className=\"book-price\">{price}</div>\n        <button className=\"btn btn-info add-to-cart\">Add to cart</button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookListItem;\n","import React from 'react';\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer,\n} = React.createContext();\n\nexport {\n  BookstoreServiceProvider,\n  BookstoreServiceConsumer,\n};\n","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\nconst withBookstoreService = () => (Wrapped) => {\n  return (props) => {\n    return (\n      <BookstoreServiceConsumer>\n        {\n          (bookstoreService) => {\n            return (<Wrapped {...props}\n                     bookstoreService={bookstoreService}/>);\n          }\n        }\n      </BookstoreServiceConsumer>\n    );\n  };\n};\n\nexport default withBookstoreService;\n","const booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST',\n  };\n};\n\nconst booksLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks,\n  };\n};\n\nconst booksError = (error) => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error,\n  };\n};\n\nconst fetchBooks = (bookstoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks()\n    .then((data) => dispatch(booksLoaded(data)))\n    .catch((err) => dispatch(booksError(err)));\n};\n\nexport {\n  fetchBooks,\n};\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return <div>loading...</div>;\n};\n\nexport default Spinner;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return <div>Error!</div>;\n};\n\nexport default ErrorIndicator;\n","/* eslint-disable no-shadow */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BookListItem from '../book-list-item';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks } from '../../actions';\nimport { compose } from '../../utils';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport './book-list.css';\n\nconst BookList = ({ books }) => {\n  return (\n    <ul className=\"book-list\">\n      {books.map((book) => {\n        return (\n          <li key={book.id}>\n            <BookListItem book={book} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const { books, loading, error } = this.props;\n\n    if (loading) {\n      return <Spinner/>;\n    }\n\n    if (error) {\n      return <ErrorIndicator/>;\n    }\n\n    return <BookList books={books}/>;\n  }\n}\n\nconst mapStateToProps = ({ books, loading, error }) => {\n  return { books, loading, error };\n};\n\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\n  };\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(BookListContainer);\n","import BookList from './book-list';\n\nexport default BookList;\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp,\n  );\n};\n\nexport { compose };\n","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;\n","/* eslint-disable object-curly-newline */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './shopping-cart-table.css';\n\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n  const renderRow = (item, idx) => {\n    const { id, name, count, price } = item;\n    return (\n      <tr key={id}>\n        <td>{idx + 1}</td>\n        <td>{name}</td>\n        <td>{count}</td>\n        <td>${price}</td>\n        <td>\n          <button\n            onClick={() => onDelete(id)}\n            className=\"btn btn-outline-danger btn-sm float-right\">\n            <i className=\"fa fa-trash-o\" />\n          </button>\n          <button\n            onClick={() => onIncrease(id)}\n            className=\"btn btn-outline-success btn-sm float-right\">\n            <i className=\"fa fa-plus-circle\" />\n          </button>\n          <button\n            onClick={() => onDecrease(id)}\n            className=\"btn btn-outline-warning btn-sm float-right\">\n            <i className=\"fa fa-minus-circle\" />\n          </button>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { items.map(renderRow) }\n        </tbody>\n      </table>\n\n      <div className=\"total\">\n        Total: ${total}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ cartItems, orderTotal }) => {\n  return {\n    items: cartItems,\n    total: orderTotal,\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {\n    onIncrease: (id) => {\n      console.log(`Increase ${id}`);\n    },\n\n    onDecrease: (id) => {\n      console.log(`Decrease ${id}`);\n    },\n\n    onDelete: (id) => {\n      console.log(`Delete ${id}`);\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import React from 'react';\nimport BookList from '../book-list';\nimport ShoppingCartTable from '../shopping-cart-table';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <BookList />\n      <ShoppingCartTable />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst CartPage = () => {\n  return <div>Cart Page</div>;\n};\n\nexport default CartPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './shop-header.css';\n\nconst ShopHeader = ({ numItems, total }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link to=\"/\">\n        <div className=\"logo text-dark\">Bookshop</div>\n      </Link>\n      <Link to=\"/cart\">\n        <div className=\"shopping-cart\" href=\"#\">\n          <i className=\"cart-icon fa fa-shopping-cart\" />\n          {numItems} items (${total})\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nexport {\n  ShopHeader,\n};\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { HomePage, CartPage } from '../pages';\nimport { ShopHeader } from '../shop-header';\n\nimport './app.css';\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"container\">\n      <ShopHeader numItems={5} total={210}/>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n\n        <Route path=\"/cart\" component={CartPage} />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n","/* eslint-disable class-methods-use-this */\nexport default class BookstoreService {\n  data = [\n    {\n      id: 1,\n      title: 'Production-Ready Microservices',\n      author: 'Susan J. Fowler',\n      price: 32,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Release It!',\n      author: 'Michael T. Nygard',\n      price: 45,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg',\n    },\n  ];\n\n  getBooks() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() > 0.75) {\n          reject(new Error('Something bad happened'));\n        } else {\n          resolve(this.data);\n        }\n      }, 700);\n    });\n  }\n}\n","const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [\n    {\n      id: 1,\n      name: 'book 1',\n      count: 3,\n      price: 150,\n    },\n    {\n      id: 2,\n      name: 'book 2',\n      count: 5,\n      price: 150,\n    },\n  ],\n  orderTotal: 220,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null,\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        ...state,\n        books: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}